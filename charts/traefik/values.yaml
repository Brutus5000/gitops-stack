traefik:
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - traefik
          topologyKey: kubernetes.io/hostname
  ports:
    metrics:
      # When using hostNetwork, use another port to avoid conflict with node exporter:
      # https://github.com/prometheus/prometheus/wiki/Default-port-allocations
      port: 9101
    web:
      redirectTo: websecure

  metrics:
    prometheus: null

  # HostNetwork
  service:
    enabled: false

  kubernetes:
    ingressEndpoint:
      useDefaultPublishedService: true
  providers:
    kubernetesIngress:
      publishedService:
        enabled: true

  # For a transition time we want to bind Traefik to a local docker.socket
  securityContext:
    allowPrivilegeEscalation: false
    runAsGroup: 0
    runAsNonRoot: false
    runAsUser: 0
    fsGroup: 0
  deployment:
    additionalVolumes:
     - name: dockersocket
       hostPath:
          path: /var/run/docker.sock
          type: Socket
  additionalVolumeMounts:
    - name: dockersocket
      mountPath: /var/run/docker.sock

  additionalArguments:
    - "--providers.docker=true"
